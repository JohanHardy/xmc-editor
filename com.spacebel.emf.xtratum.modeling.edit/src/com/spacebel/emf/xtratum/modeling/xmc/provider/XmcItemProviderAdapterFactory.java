/**
 */
package com.spacebel.emf.xtratum.modeling.xmc.provider;

import com.spacebel.emf.xtratum.modeling.xmc.util.XmcAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class XmcItemProviderAdapterFactory extends XmcAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XmcItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.AreaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AreaTypeItemProvider areaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.AreaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAreaTypeAdapter() {
		if (areaTypeItemProvider == null) {
			areaTypeItemProvider = new AreaTypeItemProvider(this);
		}

		return areaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.ChannelsE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChannelsEItemProvider channelsEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.ChannelsE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChannelsEAdapter() {
		if (channelsEItemProvider == null) {
			channelsEItemProvider = new ChannelsEItemProvider(this);
		}

		return channelsEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.CyclicPlanE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CyclicPlanEItemProvider cyclicPlanEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.CyclicPlanE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCyclicPlanEAdapter() {
		if (cyclicPlanEItemProvider == null) {
			cyclicPlanEItemProvider = new CyclicPlanEItemProvider(this);
		}

		return cyclicPlanEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.DevicesE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DevicesEItemProvider devicesEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.DevicesE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDevicesEAdapter() {
		if (devicesEItemProvider == null) {
			devicesEItemProvider = new DevicesEItemProvider(this);
		}

		return devicesEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.EventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventTypeItemProvider eventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.EventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventTypeAdapter() {
		if (eventTypeItemProvider == null) {
			eventTypeItemProvider = new EventTypeItemProvider(this);
		}

		return eventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.HealthMonitorE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HealthMonitorEItemProvider healthMonitorEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.HealthMonitorE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHealthMonitorEAdapter() {
		if (healthMonitorEItemProvider == null) {
			healthMonitorEItemProvider = new HealthMonitorEItemProvider(this);
		}

		return healthMonitorEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.HwDescriptionE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HwDescriptionEItemProvider hwDescriptionEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.HwDescriptionE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHwDescriptionEAdapter() {
		if (hwDescriptionEItemProvider == null) {
			hwDescriptionEItemProvider = new HwDescriptionEItemProvider(this);
		}

		return hwDescriptionEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.HwResourcesE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HwResourcesEItemProvider hwResourcesEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.HwResourcesE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHwResourcesEAdapter() {
		if (hwResourcesEItemProvider == null) {
			hwResourcesEItemProvider = new HwResourcesEItemProvider(this);
		}

		return hwResourcesEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.HypervisorE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HypervisorEItemProvider hypervisorEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.HypervisorE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHypervisorEAdapter() {
		if (hypervisorEItemProvider == null) {
			hypervisorEItemProvider = new HypervisorEItemProvider(this);
		}

		return hypervisorEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.HypMemoryAreaE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HypMemoryAreaEItemProvider hypMemoryAreaEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.HypMemoryAreaE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHypMemoryAreaEAdapter() {
		if (hypMemoryAreaEItemProvider == null) {
			hypMemoryAreaEItemProvider = new HypMemoryAreaEItemProvider(this);
		}

		return hypMemoryAreaEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.InterruptsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterruptsTypeItemProvider interruptsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.InterruptsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterruptsTypeAdapter() {
		if (interruptsTypeItemProvider == null) {
			interruptsTypeItemProvider = new InterruptsTypeItemProvider(this);
		}

		return interruptsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.IoPortsE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IoPortsEItemProvider ioPortsEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.IoPortsE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIoPortsEAdapter() {
		if (ioPortsEItemProvider == null) {
			ioPortsEItemProvider = new IoPortsEItemProvider(this);
		}

		return ioPortsEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.IpcPortE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IpcPortEItemProvider ipcPortEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.IpcPortE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIpcPortEAdapter() {
		if (ipcPortEItemProvider == null) {
			ipcPortEItemProvider = new IpcPortEItemProvider(this);
		}

		return ipcPortEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.MemoryAreaE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryAreaEItemProvider memoryAreaEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.MemoryAreaE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryAreaEAdapter() {
		if (memoryAreaEItemProvider == null) {
			memoryAreaEItemProvider = new MemoryAreaEItemProvider(this);
		}

		return memoryAreaEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.MemoryBlockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryBlockTypeItemProvider memoryBlockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.MemoryBlockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryBlockTypeAdapter() {
		if (memoryBlockTypeItemProvider == null) {
			memoryBlockTypeItemProvider = new MemoryBlockTypeItemProvider(this);
		}

		return memoryBlockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.MemoryLayoutE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryLayoutEItemProvider memoryLayoutEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.MemoryLayoutE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryLayoutEAdapter() {
		if (memoryLayoutEItemProvider == null) {
			memoryLayoutEItemProvider = new MemoryLayoutEItemProvider(this);
		}

		return memoryLayoutEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.NullType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NullTypeItemProvider nullTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.NullType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNullTypeAdapter() {
		if (nullTypeItemProvider == null) {
			nullTypeItemProvider = new NullTypeItemProvider(this);
		}

		return nullTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.PartitionE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartitionEItemProvider partitionEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.PartitionE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartitionEAdapter() {
		if (partitionEItemProvider == null) {
			partitionEItemProvider = new PartitionEItemProvider(this);
		}

		return partitionEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.PartitionPortsE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartitionPortsEItemProvider partitionPortsEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.PartitionPortsE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartitionPortsEAdapter() {
		if (partitionPortsEItemProvider == null) {
			partitionPortsEItemProvider = new PartitionPortsEItemProvider(this);
		}

		return partitionPortsEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.PartitionTableType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartitionTableTypeItemProvider partitionTableTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.PartitionTableType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartitionTableTypeAdapter() {
		if (partitionTableTypeItemProvider == null) {
			partitionTableTypeItemProvider = new PartitionTableTypeItemProvider(this);
		}

		return partitionTableTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.PlanE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlanEItemProvider planEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.PlanE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlanEAdapter() {
		if (planEItemProvider == null) {
			planEItemProvider = new PlanEItemProvider(this);
		}

		return planEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.PortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeItemProvider portTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.PortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortTypeAdapter() {
		if (portTypeItemProvider == null) {
			portTypeItemProvider = new PortTypeItemProvider(this);
		}

		return portTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.ProcessorE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessorEItemProvider processorEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.ProcessorE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessorEAdapter() {
		if (processorEItemProvider == null) {
			processorEItemProvider = new ProcessorEItemProvider(this);
		}

		return processorEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.ProcessorTableType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessorTableTypeItemProvider processorTableTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.ProcessorTableType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessorTableTypeAdapter() {
		if (processorTableTypeItemProvider == null) {
			processorTableTypeItemProvider = new ProcessorTableTypeItemProvider(this);
		}

		return processorTableTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.QueuingChannelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueuingChannelTypeItemProvider queuingChannelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.QueuingChannelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueuingChannelTypeAdapter() {
		if (queuingChannelTypeItemProvider == null) {
			queuingChannelTypeItemProvider = new QueuingChannelTypeItemProvider(this);
		}

		return queuingChannelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.RangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeTypeItemProvider rangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.RangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeTypeAdapter() {
		if (rangeTypeItemProvider == null) {
			rangeTypeItemProvider = new RangeTypeItemProvider(this);
		}

		return rangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.RegionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegionTypeItemProvider regionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.RegionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegionTypeAdapter() {
		if (regionTypeItemProvider == null) {
			regionTypeItemProvider = new RegionTypeItemProvider(this);
		}

		return regionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.RestrictedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestrictedTypeItemProvider restrictedTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.RestrictedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestrictedTypeAdapter() {
		if (restrictedTypeItemProvider == null) {
			restrictedTypeItemProvider = new RestrictedTypeItemProvider(this);
		}

		return restrictedTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.RswE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RswEItemProvider rswEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.RswE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRswEAdapter() {
		if (rswEItemProvider == null) {
			rswEItemProvider = new RswEItemProvider(this);
		}

		return rswEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.SamplingChannelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SamplingChannelTypeItemProvider samplingChannelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.SamplingChannelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSamplingChannelTypeAdapter() {
		if (samplingChannelTypeItemProvider == null) {
			samplingChannelTypeItemProvider = new SamplingChannelTypeItemProvider(this);
		}

		return samplingChannelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.SlotType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SlotTypeItemProvider slotTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.SlotType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSlotTypeAdapter() {
		if (slotTypeItemProvider == null) {
			slotTypeItemProvider = new SlotTypeItemProvider(this);
		}

		return slotTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.SystemDescriptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemDescriptionTypeItemProvider systemDescriptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.SystemDescriptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemDescriptionTypeAdapter() {
		if (systemDescriptionTypeItemProvider == null) {
			systemDescriptionTypeItemProvider = new SystemDescriptionTypeItemProvider(this);
		}

		return systemDescriptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.TemporalRequirementsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalRequirementsTypeItemProvider temporalRequirementsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.TemporalRequirementsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalRequirementsTypeAdapter() {
		if (temporalRequirementsTypeItemProvider == null) {
			temporalRequirementsTypeItemProvider = new TemporalRequirementsTypeItemProvider(this);
		}

		return temporalRequirementsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.TraceE} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TraceEItemProvider traceEItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.TraceE}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTraceEAdapter() {
		if (traceEItemProvider == null) {
			traceEItemProvider = new TraceEItemProvider(this);
		}

		return traceEItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.spacebel.emf.xtratum.modeling.xmc.UartType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UartTypeItemProvider uartTypeItemProvider;

	/**
	 * This creates an adapter for a {@link com.spacebel.emf.xtratum.modeling.xmc.UartType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUartTypeAdapter() {
		if (uartTypeItemProvider == null) {
			uartTypeItemProvider = new UartTypeItemProvider(this);
		}

		return uartTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (areaTypeItemProvider != null) areaTypeItemProvider.dispose();
		if (channelsEItemProvider != null) channelsEItemProvider.dispose();
		if (cyclicPlanEItemProvider != null) cyclicPlanEItemProvider.dispose();
		if (devicesEItemProvider != null) devicesEItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (eventTypeItemProvider != null) eventTypeItemProvider.dispose();
		if (healthMonitorEItemProvider != null) healthMonitorEItemProvider.dispose();
		if (hwDescriptionEItemProvider != null) hwDescriptionEItemProvider.dispose();
		if (hwResourcesEItemProvider != null) hwResourcesEItemProvider.dispose();
		if (hypervisorEItemProvider != null) hypervisorEItemProvider.dispose();
		if (hypMemoryAreaEItemProvider != null) hypMemoryAreaEItemProvider.dispose();
		if (interruptsTypeItemProvider != null) interruptsTypeItemProvider.dispose();
		if (ioPortsEItemProvider != null) ioPortsEItemProvider.dispose();
		if (ipcPortEItemProvider != null) ipcPortEItemProvider.dispose();
		if (memoryAreaEItemProvider != null) memoryAreaEItemProvider.dispose();
		if (memoryBlockTypeItemProvider != null) memoryBlockTypeItemProvider.dispose();
		if (memoryLayoutEItemProvider != null) memoryLayoutEItemProvider.dispose();
		if (nullTypeItemProvider != null) nullTypeItemProvider.dispose();
		if (partitionEItemProvider != null) partitionEItemProvider.dispose();
		if (partitionPortsEItemProvider != null) partitionPortsEItemProvider.dispose();
		if (partitionTableTypeItemProvider != null) partitionTableTypeItemProvider.dispose();
		if (planEItemProvider != null) planEItemProvider.dispose();
		if (portTypeItemProvider != null) portTypeItemProvider.dispose();
		if (processorEItemProvider != null) processorEItemProvider.dispose();
		if (processorTableTypeItemProvider != null) processorTableTypeItemProvider.dispose();
		if (queuingChannelTypeItemProvider != null) queuingChannelTypeItemProvider.dispose();
		if (rangeTypeItemProvider != null) rangeTypeItemProvider.dispose();
		if (regionTypeItemProvider != null) regionTypeItemProvider.dispose();
		if (restrictedTypeItemProvider != null) restrictedTypeItemProvider.dispose();
		if (rswEItemProvider != null) rswEItemProvider.dispose();
		if (samplingChannelTypeItemProvider != null) samplingChannelTypeItemProvider.dispose();
		if (slotTypeItemProvider != null) slotTypeItemProvider.dispose();
		if (systemDescriptionTypeItemProvider != null) systemDescriptionTypeItemProvider.dispose();
		if (temporalRequirementsTypeItemProvider != null) temporalRequirementsTypeItemProvider.dispose();
		if (traceEItemProvider != null) traceEItemProvider.dispose();
		if (uartTypeItemProvider != null) uartTypeItemProvider.dispose();
	}

}
